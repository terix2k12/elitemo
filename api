TODOs:
    setting correct system when station is set
    searching only stations in system, 
    test station systems sonderfaelle commas hochstrings etc plus    
    UI validation API
    UI design
    auto download latest jsons
    use zeromq
    station muss nicht vorgegeben werden
    
    github bauen lassen!?

    assets.pickle....automatically
    creating smaller listing.csv

maxjumps 1
    mission type INTEL
    mission type TRADE (with target)
    mission type DELIVER

maxjumps 2    
    mission type SOURCE
    
    make it a python3 project
    display ls from center in autocomplete
    vectorbox
    intermediate stopps
    landingpad = NONE has to be indicated
    better datastructure, like a cubic thingy of systems or so


// get most recent from https://eddb.io/archive/v6/stations.json


Interchange API:

cargohold
landingpad
jumpdist
maxjumps
step0
    system 
    station 
    missions:
        ...
    cargohold state / "instructions":
        (stationFromId, stationToId, commodityId, reward, price, supply)

Examples
    Intel: (Bluford, Intel, 20000, 0, 0)
    Deliver: (Bluford, Clothing, 200, 180, 10) -> buyPriceTotal = 1800 & sellPricePiece =  200
    
    intel is commodity 0

MissionTypes: Source, Deliver, Transit/Intel, Trade,     



pip install wget
